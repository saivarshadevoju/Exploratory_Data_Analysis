# -*- coding: utf-8 -*-
"""Flight_Price_Dataset_EDA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wRqZy1UgQhJgm3lWcxWEbw1iOR1BjdK7
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import seaborn as sns
# %matplotlib inline

df = pd.read_excel('flight_price.xlsx')
df

#Basic info about the data

df.info()

df.describe()

df.head()

#Feature Engineering

df['Date']=df['Date_of_Journey'].str.split('/').str[0]
df['Month']=df['Date_of_Journey'].str.split('/').str[1]
df['Year']=df['Date_of_Journey'].str.split('/').str[2]
df

df.info()

df['Date'] = df['Date'].astype(int)
df['Month'] = df['Month'].astype(int)
df['Year'] = df['Year'].astype(int)

df.info()

#Drop Date of Journey Column

df.drop('Date_of_Journey',axis=1,inplace=True)

df['Arrival_Time']= df['Arrival_Time'].apply(lambda x : x.split(' ')[0])

df['Arrival_hour'] = df['Arrival_Time'].str.split(':').str[0]
df['Arrival_min'] = df['Arrival_Time'].str.split(':').str[1]

df.head(2)

df['Arrival_hour'] = df['Arrival_hour'].astype(int)
df['Arrival_min'] = df['Arrival_min'].astype(int)

df.info()

#Drop Arrival Time

df.drop('Arrival_Time',axis=1,inplace=True)

df.head(2)

#Departure

df['Departure_hour'] = df['Dep_Time'].str.split(':').str[0]
df['Departure_min'] = df['Dep_Time'].str.split(':').str[1]

df.head(2)

df['Departure_hour'] = df['Departure_hour'].astype(int)
df['Departure_min'] = df['Departure_min'].astype(int)

df.info()

#Drop Dep_Time

df.drop('Dep_Time',axis=1,inplace=True)

df.head(2)

#Total Stops

df['Total_Stops'].unique()

df['Total_Stops'].isnull().sum()

df['Total_Stops'].mode()

# Map the 'Total_Stops' categorical values to numerical values
df['Total_Stops'] = df['Total_Stops'].map({'non-stop':0,'1 stop':1,'2 stops':2,'3 stops':3,'4 stops':4,np.nan:1})

df[df['Total_Stops'].isnull()].sum()

df.head(2)

#Drop Route

df.drop('Route',axis=1,inplace=True)

df.head(2)

#Duration

df['Duration_hour'] = df['Duration'].str.split('h').str[0]
df['Duration_min'] = df['Duration'].str.split(' ').str[1].str.split('m').str[0]

df.head(1)

df['Duration_hour'] = df['Departure_hour'].astype(int)
df['Duration_min'] = df['Departure_min'].astype(int)
df.info()

#Drop Duration

df.drop('Duration', axis=1, inplace=True)

df['Airline'].unique()

df['Additional_Info'].unique()

df['Destination'].unique()

from sklearn.preprocessing import OneHotEncoder

encoder = OneHotEncoder()
encoded = encoder.fit_transform(df[['Airline','Source','Destination','Additional_Info']]).toarray()
encoded

new_cols = pd.DataFrame(encoder.fit_transform(df[['Airline','Source','Destination','Additional_Info']]).toarray(),columns=encoder.get_feature_names_out())

df = pd.concat([df,new_cols],axis=1)

df.drop(['Airline','Source','Destination','Additional_Info'],axis=1,inplace=True)

df

